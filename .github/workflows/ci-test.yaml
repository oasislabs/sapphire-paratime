name: ci-test

on:
  push:
    branches:
      - main
      - stable/*
      - rc/*
  pull_request:
    branches:
      - main
      - stable/*
      - rc/*

env:
  OASIS_UNSAFE_SKIP_AVR_VERIFY: "1"
  OASIS_UNSAFE_KM_POLICY_KEYS: "1"
  OASIS_UNSAFE_ALLOW_DEBUG_ENCLAVES: "1"

jobs:
  test-rust:
    name: test-rust
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./runtime
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        run: rustup show

      - name: Install protoc
        run: sudo apt install -y protobuf-compiler

      - name: Build
        run: cargo build --release --locked

  test-rust-sgx:
    name: test-rust-sgx
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./runtime
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # gcc-multilib is required for bindgen to work for SGX.
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install gcc-multilib

      - name: Set up Rust
        run: rustup show

      - name: Check SGX buildability
        run: cargo check --locked --release --target x86_64-fortanix-unknown-sgx

  test-client-js:
    name: test-client-js
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./clients/js
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2.2.3
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm --filter @oasisprotocol/sapphire-paratime install

      - name: Build JS client
        run: pnpm build

      - name: Test JS client
        run: pnpm test
